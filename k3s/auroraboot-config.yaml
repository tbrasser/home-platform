state_dir: "/storage"
artifact_version: v2.4.0-k3sv1.27.3+k3s1
release_version: v2.4.0
flavor: debian
repository: kairos-io/kairos

cloud_config: |
  #cloud-config

  # Define the user accounts on the node.
  users:
    - name: "tyzbit" # the kairos user is not created
      shell: /bin/bash
      groups:
        - admin
      ssh_authorized_keys:
        - github:tyzbit

  install:
    auto: true
    device: /dev/sda
    reboot: true

  growpart:
    devices: ['/']

  kubevip:
    enable: false

  k3s:
    enabled: true
    args:
      - --disable=traefik,servicelb
      - --flannel-backend=none
      - --disable-network-policy
      - --service-cidr 172.23.64.0/18
      - --write-kubeconfig-mode 0644
    
  stages:
    initramfs:
      - name: "Mount /dev/nvme0n1 under /mnt/longhorn"
        commands:
          - mount -o rw /dev/nvme0n1 /mnt/longhorn

    boot:
      - name: "Set up local kubeconfig"
        environment:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          CONTAINERD_ADDRESS: /run/k3s/containerd/containerd.sock
          CONTAINERD_NAMESPACE: k8s.io
      - name: "Setup hostname"
        hostname: >-
          {{if eq .Values.p2p.role master }}
            neuron
          {{ else }}
            myocite
          {{ end }}
          -{{ trunc 4 .MachineID }}
      - name: "Install Calico" 
        downloads:
          - url: https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/tigera-operator.yaml
            path: /var/lib/rancher/k3s/server/manifests/calico-operator.yaml
          - url: https://raw.githubusercontent.com/tyzbit/kairos-config/main/k3s/manifests/calico-crds.yaml
            path: /var/lib/rancher/k3s/server/manifests/calico-crds.yaml

    after-install-chroot: 
      - &consolesize
        name: "Increase display console text size"
        commands:
          - sed -i 's/8x16/16x32/g' /etc/default/console-setup
      - &createdatadir
        name: "Create Longhorn data dir"
        commands:
          - mkdir -p /mnt/longhorn
      - name: "Format /dev/nvme0n1p1 if needed"
        if: "[[ $(lsblk -o FSTYPE /dev/nvme0n1p1 | tail -n 1 | wc -l) -eq 0]]"
        commands:
          - mkfs.ext4 -F /dev/nvme0n1p1
      - &createdatadir
        name: "Create data dir"
        commands:
          - mkdir -p /mnt/longhorn

    after-reset-chroot:
      - <<: *consolesize
      - <<: *createdatadir

    after-upgrade-chroot:
      - <<: *consolesize
      - <<: *createdatadir

  p2p:
    network_id: corpus
    # # run this command to generate the network_token
    # # docker run -ti --rm quay.io/mudler/edgevpn -b -g
    # network_token: (base 64 data)
    
    # Enable for LAN-only clusters
    disable_dht: true
    # EdgeVPN DNS server
    dns: false
    vpn:
      create: false
      use: false
    auto:
      enable: true
      ha: 
        enable: true
        master_nodes: 1
